/*
                           /!\ HUMANS BEWARE /!\
=================================================================================
||                                                                             ||
|| THIS FILE IS GENERATED BY MACHINES AND ANY EDITING BY HUMANS IS PROHIBITED! ||
||                                                                             ||
=================================================================================
 */

package lepus.codecs

import lepus.protocol.classes.*
import lepus.protocol.domains.*
import lepus.protocol.constants.*
import ArbitraryDomains.given
import org.scalacheck.Gen
import org.scalacheck.Arbitrary

object TxDataGenerator {

  val selectGen: Gen[TxClass.Select.type] =
    Gen.const(TxClass.Select)

  given Arbitrary[TxClass.Select.type] = Arbitrary(selectGen)

  val selectOkGen: Gen[TxClass.SelectOk.type] =
    Gen.const(TxClass.SelectOk)

  given Arbitrary[TxClass.SelectOk.type] = Arbitrary(selectOkGen)

  val commitGen: Gen[TxClass.Commit.type] =
    Gen.const(TxClass.Commit)

  given Arbitrary[TxClass.Commit.type] = Arbitrary(commitGen)

  val commitOkGen: Gen[TxClass.CommitOk.type] =
    Gen.const(TxClass.CommitOk)

  given Arbitrary[TxClass.CommitOk.type] = Arbitrary(commitOkGen)

  val rollbackGen: Gen[TxClass.Rollback.type] =
    Gen.const(TxClass.Rollback)

  given Arbitrary[TxClass.Rollback.type] = Arbitrary(rollbackGen)

  val rollbackOkGen: Gen[TxClass.RollbackOk.type] =
    Gen.const(TxClass.RollbackOk)

  given Arbitrary[TxClass.RollbackOk.type] = Arbitrary(rollbackOkGen)

  val classGen: Gen[TxClass] = Gen.oneOf(
    selectGen,
    selectOkGen,
    commitGen,
    commitOkGen,
    rollbackGen,
    rollbackOkGen
  )

  given Arbitrary[TxClass] = Arbitrary(classGen)

}
