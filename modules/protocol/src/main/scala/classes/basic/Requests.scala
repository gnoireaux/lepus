/*
                           /!\ HUMANS BEWARE /!\
=================================================================================
||                                                                             ||
|| THIS FILE IS GENERATED BY MACHINES AND ANY EDITING BY HUMANS IS PROHIBITED! ||
||                                                                             ||
=================================================================================
 */

package lepus.protocol.classes.basic

import lepus.protocol.Method
import lepus.protocol.domains.*
import lepus.protocol.constants.*

enum Requests(classId: ClassId, methodId: MethodId)
    extends Method(classId, methodId) {

  case Qos(prefetchSize: Int, prefetchCount: Short, global: Boolean)
      extends Requests(ClassId(60), MethodId(10))

  case Consume(
      queue: QueueName,
      consumerTag: ConsumerTag,
      noLocal: NoLocal,
      noAck: NoAck,
      exclusive: Boolean,
      noWait: NoWait,
      arguments: FieldTable
  ) extends Requests(ClassId(60), MethodId(20))

  case Cancel(consumerTag: ConsumerTag, noWait: NoWait)
      extends Requests(ClassId(60), MethodId(30))

  case Publish(
      exchange: ExchangeName,
      routingKey: ShortString,
      mandatory: Boolean,
      immediate: Boolean
  ) extends Requests(ClassId(60), MethodId(40))

  case Get(queue: QueueName, noAck: NoAck)
      extends Requests(ClassId(60), MethodId(70))

  case Ack(deliveryTag: DeliveryTag, multiple: Boolean)
      extends Requests(ClassId(60), MethodId(80))

  case Reject(deliveryTag: DeliveryTag, requeue: Boolean)
      extends Requests(ClassId(60), MethodId(90))

  case RecoverAsync(requeue: Boolean)
      extends Requests(ClassId(60), MethodId(100))

  case Recover(requeue: Boolean) extends Requests(ClassId(60), MethodId(110))

}
