/*
                           /!\ HUMANS BEWARE /!\
=================================================================================
||                                                                             ||
|| THIS FILE IS GENERATED BY MACHINES AND ANY EDITING BY HUMANS IS PROHIBITED! ||
||                                                                             ||
=================================================================================
 */

package lepus.protocol.classes.basic

import lepus.protocol.Method
import lepus.protocol.domains.*
import lepus.protocol.constants.*

enum Responses(classId: ClassId, methodId: MethodId)
    extends Method(classId, methodId) {

  case QosOk extends Responses(ClassId(60), MethodId(11))

  case ConsumeOk(consumerTag: ConsumerTag)
      extends Responses(ClassId(60), MethodId(21))

  case CancelOk(consumerTag: ConsumerTag)
      extends Responses(ClassId(60), MethodId(31))

  case Return(
      replyCode: ReplyCode,
      replyText: ReplyText,
      exchange: ExchangeName,
      routingKey: ShortString
  ) extends Responses(ClassId(60), MethodId(50))

  case Deliver(
      consumerTag: ConsumerTag,
      deliveryTag: DeliveryTag,
      redelivered: Redelivered,
      exchange: ExchangeName,
      routingKey: ShortString
  ) extends Responses(ClassId(60), MethodId(60))

  case GetOk(
      deliveryTag: DeliveryTag,
      redelivered: Redelivered,
      exchange: ExchangeName,
      routingKey: ShortString,
      messageCount: MessageCount
  ) extends Responses(ClassId(60), MethodId(71))

  case GetEmpty() extends Responses(ClassId(60), MethodId(72))

  case RecoverOk extends Responses(ClassId(60), MethodId(111))

}
