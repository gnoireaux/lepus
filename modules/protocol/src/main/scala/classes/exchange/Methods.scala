/*
                           /!\ HUMANS BEWARE /!\
=================================================================================
||                                                                             ||
|| THIS FILE IS GENERATED BY MACHINES AND ANY EDITING BY HUMANS IS PROHIBITED! ||
||                                                                             ||
=================================================================================
 */

package lepus.protocol.classes

import lepus.protocol.*
import lepus.protocol.domains.*
import lepus.protocol.constants.*

enum ExchangeClass(methodId: MethodId)
    extends Class(ClassId(40))
    with Method(methodId) {

  case Declare(
      exchange: ExchangeName,
      `type`: ShortString,
      passive: Boolean,
      durable: Boolean,
      autoDelete: Boolean,
      internal: Boolean,
      noWait: NoWait,
      arguments: FieldTable
  ) extends ExchangeClass(MethodId(10)) with Response

  case DeclareOk extends ExchangeClass(MethodId(11)) with Request

  case Delete(exchange: ExchangeName, ifUnused: Boolean, noWait: NoWait)
      extends ExchangeClass(MethodId(20))
      with Response

  case DeleteOk extends ExchangeClass(MethodId(21)) with Request

  case Bind(
      destination: ExchangeName,
      source: ExchangeName,
      routingKey: ShortString,
      noWait: NoWait,
      arguments: FieldTable
  ) extends ExchangeClass(MethodId(30)) with Response

  case BindOk extends ExchangeClass(MethodId(31)) with Request

  case Unbind(
      destination: ExchangeName,
      source: ExchangeName,
      routingKey: ShortString,
      noWait: NoWait,
      arguments: FieldTable
  ) extends ExchangeClass(MethodId(40)) with Response

  case UnbindOk extends ExchangeClass(MethodId(51)) with Request

}
