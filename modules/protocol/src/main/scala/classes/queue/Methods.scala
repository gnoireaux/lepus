/*
                           /!\ HUMANS BEWARE /!\
=================================================================================
||                                                                             ||
|| THIS FILE IS GENERATED BY MACHINES AND ANY EDITING BY HUMANS IS PROHIBITED! ||
||                                                                             ||
=================================================================================
 */

package lepus.protocol.classes

import lepus.protocol.*
import lepus.protocol.domains.*
import lepus.protocol.constants.*

enum QueueClass(methodId: MethodId)
    extends Class(ClassId(50))
    with Method(methodId) {

  case Declare(
      queue: QueueName,
      passive: Boolean,
      durable: Boolean,
      exclusive: Boolean,
      autoDelete: Boolean,
      noWait: NoWait,
      arguments: FieldTable
  ) extends QueueClass(MethodId(10)) with Response

  case DeclareOk(
      queue: QueueName,
      messageCount: MessageCount,
      consumerCount: Int
  ) extends QueueClass(MethodId(11)) with Request

  case Bind(
      queue: QueueName,
      exchange: ExchangeName,
      routingKey: ShortString,
      noWait: NoWait,
      arguments: FieldTable
  ) extends QueueClass(MethodId(20)) with Response

  case BindOk extends QueueClass(MethodId(21)) with Request

  case Unbind(
      queue: QueueName,
      exchange: ExchangeName,
      routingKey: ShortString,
      arguments: FieldTable
  ) extends QueueClass(MethodId(50)) with Response

  case UnbindOk extends QueueClass(MethodId(51)) with Request

  case Purge(queue: QueueName, noWait: NoWait)
      extends QueueClass(MethodId(30))
      with Response

  case PurgeOk(messageCount: MessageCount)
      extends QueueClass(MethodId(31))
      with Request

  case Delete(
      queue: QueueName,
      ifUnused: Boolean,
      ifEmpty: Boolean,
      noWait: NoWait
  ) extends QueueClass(MethodId(40)) with Response

  case DeleteOk(messageCount: MessageCount)
      extends QueueClass(MethodId(41))
      with Request

}
